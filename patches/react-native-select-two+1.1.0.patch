diff --git a/node_modules/react-native-select-two/index.js b/node_modules/react-native-select-two/index.js
index 5c94a58..c7bdd21 100644
--- a/node_modules/react-native-select-two/index.js
+++ b/node_modules/react-native-select-two/index.js
@@ -7,16 +7,18 @@ import Button from './lib/Button';
 import TagItem from './lib/TagItem';
 import utilities from './lib/utilities';
 import PropTypes from 'prop-types';
+import { Colors } from 'react-native/Libraries/NewAppScreen';
 
 const { height } = Dimensions.get('window');
 const INIT_HEIGHT = height * 0.6;
+let jobName = ''
 // create a component
 class Select2 extends Component {
     static defaultProps = {
         cancelButtonText: 'Hủy',
         selectButtonText: 'Chọn',
         searchPlaceHolderText: "Nhập vào từ khóa",
-        listEmptyTitle: 'Không tìm thấy lựa chọn phù hợp',
+        listEmptyTitle: 'No Job Found',
         colorTheme: '#16a45f',
         buttonTextStyle: {},
         buttonStyle: {},
@@ -24,10 +26,12 @@ class Select2 extends Component {
     }
     state = {
         show: false,
+        show1: false,
         preSelectedItem: [],
         selectedItem: [],
         data: [],
-        keyword: ''
+        keyword: '',
+        showed_job: '',
     }
     animatedHeight = new Animated.Value(INIT_HEIGHT);
 
@@ -80,6 +84,13 @@ class Select2 extends Component {
         this.setState({ data, show: false, keyword: '', selectedItem: preSelectedItem });
     }
 
+    confirmCustomJob = () => {
+        this.setState({ show1: false});
+        this.setState({ show: false });
+        jobName = this.state.showed_job
+        console.log(jobName)
+    }
+
     onItemSelected = (item, isSelectSingle) => {
         let selectedItem = [];
         let { data } = this.state;
@@ -125,13 +136,15 @@ class Select2 extends Component {
     closeModal = () => this.setState({ show: false });
     showModal = () => this.setState({ show: true });
 
+    showModal1 = () => this.setState({ show1: true });
+
     render() {
         let {
             style, modalStyle, title, onSelect, onRemoveItem, popupTitle, colorTheme,
             isSelectSingle, cancelButtonText, selectButtonText, searchPlaceHolderText,
             selectedTitleStyle, buttonTextStyle, buttonStyle, showSearchBox
         } = this.props;
-        let { show, selectedItem, preSelectedItem } = this.state;
+        let { show, show1, selectedItem, preSelectedItem, showed_job} = this.state;
         return (
             <TouchableOpacity
                 onPress={this.showModal}
@@ -141,7 +154,7 @@ class Select2 extends Component {
                     onBackdropPress={this.closeModal}
                     style={{
                         justifyContent: 'flex-end',
-                        margin: 0
+                        margin: 0,
                     }}
                     useNativeDriver={true}
                     animationInTiming={300}
@@ -150,11 +163,13 @@ class Select2 extends Component {
                     isVisible={show}>
                     <Animated.View style={[styles.modalContainer, modalStyle, { height: this.animatedHeight }]}>
                         <View>
-                            <Text style={[styles.title, this.defaultFont, { color: colorTheme }]}>
+                            <Text style={[styles.title, this.defaultFont, { color: colorTheme}]}>
                                 {popupTitle || title}
                             </Text>
                         </View>
+                        
                         <View style={styles.line} />
+                        <View style={styles.rowContainer}>
                         {
                             showSearchBox
                                 ? <TextInput
@@ -175,10 +190,41 @@ class Select2 extends Component {
                                             toValue: INIT_HEIGHT,
                                             friction: 7
                                         }).start();
-                                    }}
+                                    3}}
                                 />
-                                : null
+                                
+                            : null
+                            
                         }
+                        <Button
+                                defaultFont={this.defaultFont}
+                                title='Custom Job'
+                                backgroundColor={colorTheme}
+                                textStyle={buttonTextStyle}
+                                onPress={this.showModal1}
+                                style={[styles.button1, buttonStyle, {borderWidth: 1, borderColor: colorTheme}]}/>
+                        
+                        </View>
+                        <Modal isVisible={show1}>
+                            <View style={styles.customJobModal}>
+                                <Text style={[styles.customJobTitle, this.defaultFont]}>
+                                    Enter your custom job
+                                </Text>
+                                <View style={styles.line} />
+                                <TextInput placeholder= 'Enter Your Job' style={styles.inputKeyword1} value={this.state.customInput} onChangeText={(customInput) => this.setState({showed_job:customInput})}>
+
+                                </TextInput>
+                                <View style={{flexDirection: 'row', width: '97%', justifyContent: 'space-evenly'}}>
+                                    <Button
+                                    defaultFont={this.defaultFont}
+                                    title='Confirm'
+                                    backgroundColor={colorTheme}
+                                    textStyle={buttonTextStyle}
+                                    onPress={this.confirmCustomJob}
+                                    style={[styles.customJobButton, buttonStyle, {borderColor: colorTheme}]}/>
+                                </View>
+                            </View>
+                        </Modal>
                         <FlatList
                             style={styles.listOption}
                             data={this.dataRender || []}
@@ -188,6 +234,7 @@ class Select2 extends Component {
                         />
 
                         <View style={styles.buttonWrapper}>
+                        
                             <Button
                                 defaultFont={this.defaultFont}
                                 onPress={() => {
@@ -207,7 +254,11 @@ class Select2 extends Component {
                                         selectedObjectItems.push(item);
                                     })
                                     onSelect && onSelect(selectedIds, selectedObjectItems);
-                                    this.setState({ show: false, keyword: '', preSelectedItem: selectedItem });
+                                    this.setState({ show: false, keyword: '', preSelectedItem: selectedItem});
+                                    const showedjob = selectedItem[0].name
+                                    this.setState({showed_job:showedjob})
+                                    jobName = showedjob
+                                    console.log(jobName)
                                 }}
                                 title={selectButtonText}
                                 backgroundColor={colorTheme}
@@ -220,7 +271,7 @@ class Select2 extends Component {
                     preSelectedItem.length > 0
                         ? (
                             isSelectSingle
-                                ? <Text style={[styles.selectedTitlte, this.defaultFont, selectedTitleStyle, { color: '#333' }]}>{preSelectedItem[0].name}</Text>
+                                ? <Text style={[styles.selectedTitlte, this.defaultFont, selectedTitleStyle, { color: '#333' }]}>{this.state.showed_job}</Text>
                                 : <View style={styles.tagWrapper}>
                                     {
                                         preSelectedItem.map((tag, index) => {
@@ -261,27 +312,54 @@ class Select2 extends Component {
 const styles = StyleSheet.create({
     container: {
         width: '100%', minHeight: 45, borderRadius: 2, paddingHorizontal: 16,
-        flexDirection: 'row', alignItems: 'center', borderWidth: 1,
-        borderColor: '#cacaca', paddingVertical: 4
+        flexDirection: 'row', alignItems: 'center', paddingVertical: 4, backgroundColor: '#ffffff'
+    },
+    rowContainer: {
+        flexDirection:'row'
     },
     modalContainer: {
         paddingTop: 16, backgroundColor: '#fff', borderTopLeftRadius: 8, borderTopRightRadius: 8
     },
+    customJobModal: {
+        backgroundColor:'white',
+        paddingLeft: '7%',
+        paddingRight: '7%',
+        alignItems: 'center',
+        justifyContent: 'center',
+        borderRadius: 4,
+        height: '20%'
+    },
     title: {
         fontSize: 16, marginBottom: 16, width: '100%', textAlign: 'center'
     },
+    customJobTitle: {
+        fontSize: 18, color: '#000000', marginTop: '15%'
+    },
     line: {
-        height: 1, width: '100%', backgroundColor: '#cacaca'
+        height: 1, marginTop: 10, width: '100%', backgroundColor: '#cacaca'
+    },
+    line1: {
+        height: 1, width: '100%', backgroundColor: '#cacaca',
     },
     inputKeyword: {
-        height: 40, borderRadius: 5, borderWidth: 1, borderColor: '#cacaca',
-        paddingLeft: 8, marginHorizontal: 24, marginTop: 16
+        height: 40, width: '55%', borderRadius: 5, borderWidth: 1, borderColor: '#cacaca',
+        paddingLeft: 8, marginLeft: '5%', marginTop: 16
+    },
+    inputKeyword1: {
+        height: 40, width: '97%', borderRadius: 5, borderWidth: 1, borderColor: '#cacaca',
+        paddingLeft: 8, marginTop: 20
     },
     buttonWrapper: {
         marginVertical: 16, flexDirection: 'row', alignItems: 'center', justifyContent: 'center'
     },
     button: {
-        height: 36, flex: 1
+        height: 36, flex: 2, color: '#328da8'
+    },
+    button1: {
+        color: '#328da8', marginTop: 16, marginLeft: '5%'
+    },
+    customJobButton: {
+        marginTop: '10%', width: '120%'
     },
     selectedTitlte: {
         fontSize: 14, color: 'gray', flex: 1
@@ -328,3 +406,4 @@ Select2.propTypes = {
 
 //make this component available to the app
 export default Select2;
+export { jobName };
\ No newline at end of file
